#!/bin/sh -e

# shellcheck source=src/mysql/utilities/mysql-utilities
. "$SNAP/utilities/mysql-utilities"

mkdir -p "${SNAP_DATA}/logs"
chmod 750 "${SNAP_DATA}/logs"

new_install=false

if ! mysql_is_initialized; then
	rm -rf "$SNAP_DATA/mysql"
fi

# Make sure the database is initialized (this is safe to run if already
# initialized)
if mysqld --defaults-file="$SNAP/my.cnf" --initialize-insecure --basedir="$SNAP" --datadir="$SNAP_DATA/mysql" --lc-messages-dir="$SNAP/share" > /dev/null 2>&1; then
	new_install=true
fi

set_mysql_setup_running

# Start mysql
"$SNAP/support-files/mysql.server" start

# Initialize new installation if necessary.
if [ $new_install = true ]; then
	# Generate a password for the root mysql user.
	printf "Generating root mysql password... "
	root_password="$(tr -dc _A-Z-a-z-0-9 < /dev/urandom | head -c64)"
	printf "done\n"

	# Generate a password for the nextcloud mysql user.
	printf "Generating nextcloud mysql password... "
	nextcloud_password="$(tr -dc _A-Z-a-z-0-9 < /dev/urandom | head -c64)"
	printf "done\n"

	# Save root user information
	cat <<-EOF > "$MYSQL_ROOT_OPTION_FILE"
		[client]
		socket=$MYSQL_SOCKET
		user=root
	EOF
	chmod 600 "$MYSQL_ROOT_OPTION_FILE"

	# Make sure we wait until MySQL is actually up before continuing
	wait_for_mysql -f

	# Now set everything up in one step:
	# 1) Set the root user's password
	# 2) Create the nextcloud user
	# 3) Create the nextcloud database
	# 4) Grant the nextcloud user privileges on the nextcloud database
	printf "Setting up users and nextcloud database... "
	if run-mysql <<-SQL
		ALTER USER 'root'@'localhost' IDENTIFIED BY '$root_password';
		CREATE USER 'nextcloud'@'localhost' IDENTIFIED BY '$nextcloud_password';
		CREATE DATABASE nextcloud;
		GRANT ALL PRIVILEGES ON nextcloud.* TO 'nextcloud'@'localhost';
		SQL
	then
		# Now the root mysql user has a password. Save that as well.
		echo "password=$root_password" >> "$MYSQL_ROOT_OPTION_FILE"
		printf "done\n"
	else
		echo "Failed to initialize-- undoing setup and will try again..."
		"$SNAP/support-files/mysql.server" stop
		rm -rf "$SNAP_DATA/mysql"
		exit 1
	fi
else
	# Okay, this isn't a new installation. However, we recently changed
	# the location of MySQL's socket (11.0.2snap1). Make sure the root
	# option file is updated to look there instead of the old location.
	sed -ri "s|(socket\s*=\s*)/var/snap/.*mysql.sock|\1$MYSQL_SOCKET|" "$MYSQL_ROOT_OPTION_FILE"
fi

# Wait here until mysql is running. MySQL 8 runs the upgrade automatically,
# so no need to do that, anymore.
wait_for_mysql -f

# If this was a new installation, wait until the server is all up and running
# before saving off the nextcloud user's password. This way the presence of the
# file can be used as a signal that mysql is ready to be used.
if [ $new_install = true ]; then
	mysql_set_nextcloud_password "$nextcloud_password"
fi

set_mysql_setup_not_running

# Wait here until mysql exits (turn a forking service into simple). This is
# only needed for Ubuntu Core 15.04, as 16.04 supports forking services.
pid=$(mysql_pid)
while kill -0 "$pid" 2>/dev/null; do
	sleep 1
done
