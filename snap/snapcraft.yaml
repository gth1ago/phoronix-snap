name: phoronix-teste
version: '0.1'
summary: teste-phoronix
description: |
 Teste para phoronix com PHP personlizado ja pronto
 extens√µes futuras.

grade: devel
confinement: devmode
base: core18

architectures:
  - build-on: amd64
  - build-on: i386
  - build-on: arm64

apps:
  phoronix-teste:
    environment:
      PYTHONPATH: $SNAP/usr/lib/python3/dist-packages
    #PATH: /usr/bin:$SNAP/usr/bin/:$PATH
      LD_LIBRARY_PATH: /usr/share:$SNAP/usr/share:$SNAP/prime/usr/share:$SNAP/usr/doc:$SNAP/usr/lib:/usr/include
    command: bin/phoronix-test-suite

  # PHP FPM daemon
  php-fpm:
    command: bin/start-php-fpm
    reload-command: bin/reload-php
    daemon: simple
    restart-condition: always
    plugs:
      - network
      - network-bind

hooks:
  configure:
    plugs: [network, network-bind, removable-media]
#  pre-refresh:
#    plugs: [network, network-bind, removable-media]

parts:
  php:
    plugin: php
    source: https://php.net/get/php-8.0.13.tar.bz2/from/this/mirror
    source-checksum: sha256/c2419d7ba4395f44747043f4e6f5b47fa08125705fb9f88377e453068a815836
    source-type: tar
    install-via: prefix
    configflags:
      - --enable-fpm
      - --disable-cgi
      - --disable-phar
      - --disable-phpdbg
      - --enable-ctype
      - --enable-mbstring
      - --with-zip
      - --with-pdo-mysql
      - --with-zlib
      - --enable-gd
      - --with-curl
      #- --with-openssl
      - --with-bz2
      - --enable-exif
      - --enable-intl
      - --enable-pcntl
      - --with-jpeg
      - --with-freetype
      - --disable-rpath
      - --enable-ftp
      - --enable-bcmath

      # Enable ldap
      - --with-libdir=lib/$SNAPCRAFT_ARCH_TRIPLET
      - --with-ldap

      # Enable gmp
      - --with-gmp

      # Enable argon2
      #- --with-password-argon2

      # Disable sqlite (we use mysql)
      - --without-sqlite3
      - --without-pdo-sqlite
    build-packages:
      - libxml2-dev
      - libcurl4-openssl-dev
      - libpng-dev
      - libjpeg8-dev
      - libbz2-dev
      - libmcrypt-dev
      - libldap2-dev
      - libfreetype6-dev
      - libgmp-dev
      - libzip-dev
      - libargon2-0-dev

      # This is no longer bundled with PHP as of v7.4
      - libonig-dev
    stage-packages:
      - libasn1-8-heimdal
      - libcurl4
      - libfreetype6
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libicu60
      - libjpeg8
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libpng16-16
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libsasl2-2
      - libwind0-heimdal
      - libxml2
      - libzip4
      - libargon2-0
      - libonig4
    prime:
     - -sbin/
     - -etc/
    organize:
      # Put php-fpm in bin with everything else, not sbin.
      sbin/php-fpm: bin/php-fpm
    #extensions:
      # Build the redis PHP module
      #- source: https://github.com/phpredis/phpredis/archive/5.3.4.tar.gz
      #  source-checksum: sha256/c0df53dc4e8cd2921503fefa224cfd51de7f74561324a6d3c66f30d4016178b3

  # Copy over our PHP configuration file.
  php-customizations:
    plugin: dump
    source: src/php/
    organize:
      config/*: config/php/
    stage-packages: [mawk]

  common:
    plugin: dump
    source: src/common/

  hooks:
   plugin: dump
   source: src/hooks/
   organize:
     bin/: snap/hooks/
   stage-packages: [curl]


  phoronix-teste:
    source: .
    plugin: python
    python-version: python3
    # - php-xml
    build-packages:
      - build-essential
      - gcc
    stage-packages:
      - python-pip
      - python-dev
      - libxml2-dev
      - libxslt-dev
      - libc6-dev
      - gcc
      - make
      - cmake
      - build-essential
      - autoconf
      - mesa-utils
      - vulkan-utils
      - unzip
      - apt-file
      - libxi6
      - libxi-dev
    #python-packages:
    #  - pip==20.3.4
    #build-environment:
    #  - PYTHONPATH: $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages:$PYTHONPATH
    override-build: |
      snapcraftctl build
      cd phoronix-test-suite
      ./install-sh $SNAPCRAFT_PART_INSTALL
      #cp -r /usr/share/phoronix-test-suite $SNAPCRAFT_PART_INSTALL/share
      which phoronix-test-suite
      phoronix-test-suite install-dependencies cachebench
      phoronix-test-suite install cachebench

